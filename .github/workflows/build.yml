name: Build Apprise API Image

on:
  push:
    branches: ["*"]
    tags:
      - v*
  pull_request:
    branches: ["master"]

  # Allow job to be triggered manually.
  workflow_dispatch:

jobs:
  buildx:
    name: Build Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Set the GitHub Container Registry repository name for the current organization
      - name: Set ghcr repository name
        id: set-ghcr-repository
        run: |
          ghcr_name=$(echo "${{ github.repository_owner }}/apprise-api" | awk '{ print tolower($0) }')
          echo "Name is ${ghcr_name}"
          echo "ghcr-repository=${ghcr_name}" >> $GITHUB_OUTPUT

      - name: Docker meta
        id: docker_meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ steps.set-ghcr-repository.outputs.ghcr-repository }}
          tags: |
            type=semver,event=tag,pattern={{version}}
            type=semver,event=tag,pattern={{major}}.{{minor}}
            type=edge,branch=master
            type=ref,event=branch
            type=sha,prefix={{branch}}-,format=short

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile.optimized
          target: runtime
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Run Trivy vulnerability scanner
        if: github.event_name != 'pull_request'
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ fromJSON(steps.docker_meta.outputs.json).tags[0] }}
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Display Trivy scan results (Table format)
        if: github.event_name != 'pull_request' && always()
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ fromJSON(steps.docker_meta.outputs.json).tags[0] }}
          format: 'table'

      - name: Upload Trivy scan results to GitHub Security tab
        if: github.event_name != 'pull_request'
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'

      - name: Run Grype vulnerability scanner
        if: github.event_name != 'pull_request'
        uses: anchore/scan-action@v4
        id: grype
        with:
          image: ${{ fromJSON(steps.docker_meta.outputs.json).tags[0] }}

      - name: Display Grype scan results (Table format)
        if: github.event_name != 'pull_request' && always()
        uses: anchore/scan-action@v4
        with:
          image: ${{ fromJSON(steps.docker_meta.outputs.json).tags[0] }}
          output-format: table
          fail-build: false

      - name: Upload Grype scan results to GitHub Security tab
        if: github.event_name != 'pull_request' && always()
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: ${{ steps.grype.outputs.sarif }}
